version: '3.5'

services:
  api1:
    container_name: api1
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 60s sh ./docker-entrypoint.sh
    restart: always
    networks:
      - rinhanet
    build: 
      context: ./src
    ports:
      - "8000"
    depends_on:
      - postgres
    volumes:
      - ./src:/app
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1.15GB'

  api2:
    container_name: api2
    entrypoint: dockerize -wait tcp://postgres:5432 -timeout 60s sh ./docker-entrypoint.sh
    restart: always
    networks:
      - rinhanet
    build: 
      context: ./src
    ports:
      - "8000"
    volumes:
      - ./src:/app      
    depends_on:
      - postgres      
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '1.15GB'

  nginx:
    image: nginx:latest
    container_name: api_nginx
    restart: always
    networks:
      - rinhanet
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.65'
          memory: '0.1GB'

  postgres:
    image: postgres:latest
    container_name: api_database
    networks:
      - rinhanet
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql      
    ports:
      - "5432"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.1GB'

  redis:
    image: redis:latest
    networks:
      - rinhanet
    ports:
      - '6379'
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.5GB'

networks:
  rinhanet:
